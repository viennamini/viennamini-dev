PROJECT(ViennaMini)

cmake_minimum_required(VERSION 2.6)

#if you don't want the full compiler output, remove the following line
SET(CMAKE_VERBOSE_MAKEFILE ON)

#specify custom boost path if needed:
#SET(BOOSTPATH "/opt/boost")

list(APPEND CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake")

#set default build type 
IF (NOT CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE "Release")
ENDIF()

#set compiler flags
SET(CMAKE_CXX_FLAGS "-Wall -pedantic")
SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O3 -g ")
SET(CMAKE_CXX_FLAGS_RELEASE "-O3 ")
SET(CMAKE_CXX_FLAGS_DEBUG  "-O0 -g ")

# alternate boost path for macs
IF(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
   INCLUDE_DIRECTORIES("/opt/local/include")
ENDIF(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")


#specify include and source directory
INCLUDE_DIRECTORIES(".")
INCLUDE_DIRECTORIES(${BOOSTPATH})
INCLUDE_DIRECTORIES($ENV{VIENNAMATH})
INCLUDE_DIRECTORIES($ENV{VIENNAGRID})
INCLUDE_DIRECTORIES($ENV{VIENNACL})
INCLUDE_DIRECTORIES($ENV{VIENNADATA})
INCLUDE_DIRECTORIES($ENV{VIENNAFVM})
INCLUDE_DIRECTORIES($ENV{VIENNAMATERIALS})
INCLUDE_DIRECTORIES($ENV{VIENNAUTILS})

IF(ENABLE_OPENCL)
  FIND_PACKAGE(OpenCL REQUIRED)
  IF(OPENCL_FOUND)
    INCLUDE_DIRECTORIES(${OPENCL_INCLUDE_DIRS})
    SET(LIBRARIES ${LIBRARIES} ${OPENCL_LIBRARIES})
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS} -DVIENNACL_WITH_OPENCL")
  ENDIF(OPENCL_FOUND)
ENDIF(ENABLE_OPENCL)

IF(ENABLE_OPENMP)
  FIND_PACKAGE(OpenMP REQUIRED)
  IF(OPENMP_FOUND)
    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS} -DVIENNACL_WITH_OPENMP")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS} -DVIENNACL_WITH_OPENMP")
  ENDIF(OPENMP_FOUND)
ENDIF(ENABLE_OPENMP)

#list all source files here
ADD_EXECUTABLE(mosfet     examples/tutorial/mosfet.cpp)
TARGET_LINK_LIBRARIES(mosfet ${LIBRARIES})

ADD_EXECUTABLE(trigate     examples/tutorial/trigate.cpp)
TARGET_LINK_LIBRARIES(trigate ${LIBRARIES})

ADD_EXECUTABLE(nin2d     examples/tutorial/nin2d.cpp)
TARGET_LINK_LIBRARIES(nin2d ${LIBRARIES})


##Compatibility with Qt-Creator
file( GLOB_RECURSE QtCreatorCompatibility_SRC
    viennamini/*.hpp viennamini/*.h)
add_custom_target( QtCreatorCompatibility SOURCES ${QtCreatorCompatibility_SRC} )
